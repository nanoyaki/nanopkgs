# SPDX-FileCopyrightText: 2025 Hana Kretzer <hanakretzer@gmail.com>
#
# SPDX-License-Identifier: MIT

[__config__]
oldver = "_versions/old_versions.json"
newver = "_versions/new_versions.json"
keyfile = "/run/secrets/keys.toml"
max_concurrency = 3

["shoko-webui.pnpmHash"]
source = "cmd"
cmd = '''
    (nix build .#shoko-webui --no-link |& grep -oP "got\:.*\Ksha256.*") \
        || jq -r '.data."shoko-webui.pnpmHash".version' _versions/new_versions.json
'''

["shoko.nugetDepsHash"]
source = "cmd"
cmd = '''
    log="./update_shoko.nugetDepsHash.log"

    bash -c '
        set -xe

        outLink="$(mktemp ./XXXXXX_out_link -u)"
        updateScript="$(mktemp ./XXXXXX_update_script.sh -u)"

        nix build .#shoko.fetch-deps --out-link $outLink
        sed '\''s|/nix/store/[^/]*-source/pkgs/by-name/sh/shoko/deps\.json|pkgs/by-name/sh/shoko/deps.json|g'\'' \
            "$(readlink -f $outLink)" \
            > $updateScript
        chmod +x $updateScript
        $updateScript

        rm $outLink $updateScript
    ' &> $log
    if [ -z $DEBUG_NVCHECKER ]; then rm $log; fi

    nix hash convert --hash-algo sha256 --to sri $(sha256sum pkgs/by-name/sh/shoko/deps.json | awk '{print $1}')
'''

["shokofin.nugetDepsHash"]
source = "cmd"
cmd = '''
    log="./update_shokofin.nugetDepsHash.log"

    bash -c '
        set -xe

        outLink="$(mktemp ./XXXXXX_out_link -u)"
        updateScript="$(mktemp ./XXXXXX_update_script.sh -u)"

        nix build .#shokofin.fetch-deps --out-link $outLink
        sed 's|/nix/store/[^/]*-source/pkgs/by-name/sh/shokofin/deps\.json|pkgs/by-name/sh/shokofin/deps.json|g' \
            "$(readlink -f $outLink)" \
            > $updateScript
        chmod +x $updateScript
        $updateScript

        rm $outLink $updateScript
    ' &> $log
    if [ -z $DEBUG_NVCHECKER ]; then rm $log; fi

    nix hash convert --hash-algo sha256 --to sri $(sha256sum pkgs/by-name/sh/shokofin/deps.json | awk '{print $1}')
'''

["suwayomi-server.gradleDepsHash"]
source = "cmd"
cmd = '''
    log="./update_suwayomi-server.gradleDepsHash.log"

    bash -c '
        set -xe

        outLink="$(mktemp ./XXXXXX_out_link -u)"
        updateScript="$(mktemp ./XXXXXX_update_script.sh -u)"

        echo "{}" > pkgs/overrides/suwayomi-server/deps.json

        nix build .#suwayomi-server.mitmCache.updateScript --out-link $outLink
        sed '\''s|/nix/store/[^/]*-source/pkgs/overrides/suwayomi-server/deps\.json|pkgs/overrides/suwayomi-server/deps.json|g'\'' \
            "$(readlink -f $outLink)" \
            > $updateScript
        sed '\''s|useBwrap="${USE_BWRAP:-1}"|useBwrap=""|g'\'' $updateScript \
            > $updateScript.tmp \
            && mv $updateScript.tmp $updateScript
        chmod +x $updateScript
        $updateScript

        rm $outLink $updateScript
    ' &> $log
    if [ -z $DEBUG_NVCHECKER ]; then rm $log; fi

    nix hash convert --hash-algo sha256 --to sri $(sha256sum pkgs/overrides/suwayomi-server/deps.json | awk '{print $1}')
'''

["suwayomi-server.version"]
source = "cmd"
cmd = '''
    prefix="$(curl \
        --fail \
        -L \
        -H "Authorization: Bearer $(cat $HOME/.secrets/githubToken)" \
        "https://api.github.com/repos/Suwayomi/Suwayomi-Server/tags" \
        | jq -r '.[0].name' \
        | grep -oP 'v\K\d.\d.')"

    revision="$(curl \
        --fail \
        -I \
        -L \
        -H "Authorization: Bearer $(cat $HOME/.secrets/githubToken)" \
        'https://api.github.com/repos/Suwayomi/Suwayomi-Server/commits?sha=master&per_page=1&page=1' \
        | grep -oP 'page=\K\d{2,5}')"

    echo "$prefix$revision"
'''

["suwayomi-webui.revision"]
source = "httpheader"
url = "https://api.github.com/repos/Suwayomi/Suwayomi-WebUI/commits?sha=master&per_page=1&page=1"
header = "link"
regex = '(?<=page=)\d{2,5}'

["suwayomi-webui.yarnHash"]
source = "cmd"
cmd = '''
    (nix build .#suwayomi-webui --no-link |& grep -oP "got\:.*\Ksha256.*") \
        || jq -r '.data."suwayomi-webui.yarnHash".version' _versions/new_versions.json
'''
